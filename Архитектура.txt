        Архитектура

==========Общий раздел======
1. Вид  релиза приложения

    Несколько файлов с кодом выполняемых с помощью интепритатора
    python 3.9.

2.Структура приложения

    Функциональная парадигма.

    Модуль верхнего уровня,включающий в себя, супер цикл с обработкой
    команд пользователя и вызовом основных функций.

    Дополнительные модули,содержащие все основные функции приложения.

    Модули стандартной библиотеки
3.Работа с данными
     #JSON, CSV, TSV, XML, HTML, CSS, INI текстовые расширения файлов для
     структурирования данных
     Два INI-файла для хранения информации об игроках (player.ini)
     и о сохраненых партиях(saves.ini)


    player.ini

    [player1]
    hash = 87gsg9ss87uj1f
    first_time = True
    stats = 1,0,1


    saves.ini
    [player1,player2]
    X = player1
    turns = #: дописать структуру хранения данных о ходах в сохраненой партии


    #Имена игроков, статистика игроков, сохраненые
    #количество файлов?
    #пока- один#
4.Структура хранения данных

    #Имена игроков, статистика игроков, сохраненые

    {'1':' имя игрока', ...}
    {'player1 ':{'hash':'s908098;jhj3jhj:',
                     'first_time': True,
                     'stats':{'wins':1, 'ties':0, 'fails':1}},
    {'player1 ':{'hash':'s908034:23rjymsj:',
                     'first_time': False,
                     'stats':{'wins':1, 'ties':0, 'fails':1}},
    ...}
    #Сохраненые незаконченые партии


    #Ходы в текущей партии



    [['x','0','x']
     ['0','x', '']
     [' ','x',' ']]
     (player1,player2)
     ('X','0')

==========================Этапы работы приложения================

1.Чтение конфигурационных файлов

2.ЕСЛИ первый запуск приложения:
         ИСТИНА: вывод раздела помощи

3.Запрос имени игрока

    а)ЕСЛИ имя среди  зарегистрированных игроков:
         ИСТИНА: выбираем игрока как активного
         ЛОЖЬ: то запускаем процесс создания нового игрока и делаем его активным


    4.Ожидание пользовательских команд


    5.Запрос режима игры
         а)ЕСЛИ "бот":
                запрос уровня сложности
         б)если "Два человека":
                то запрос имени второго игрока

    6.ЕСЛИ первая партия для любого из игроков:
        включение режима обучения

    7.Партия

    8.Если партия закончена досрочно:
        сохранение данных о партии

     9.Внесение изменений в статистику игрока(-ов)

10.Запись данных в конфигурационные файлы

========================== Основные функции ======================

    show_win()
        Выводит в стандартный поток игровое поле с ходами игроков

    chek_win()
        Проверяет игровое поле, есть ли выигрышная комбинация