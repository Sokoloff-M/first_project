                             Архитектура

============================ Общий раздел ============================

1. Вид релиза приложения

    Несколько файлов с кодом выполняемых с помощью интерпретатора python 3.9


2. Структура приложения

    Функциональная парадигма.

    Модуль верхнего уровня, включающий в себя супер цикл с обработкой команд пользователя и вызовом основных функций.

    Дополнительные модули, содержащие все основные функции приложения.

    Модули стандартной библиотеки


3. Структура хранения данных

    # JSON, CSV, TSV, XML, HTML, CSS, INI текстовые расширения файлов для структурирования данных

    Два INI-файла для хранения информации об игроках (player.ini) и о сохранённых партиях (saves.ini)

    player.ini

        [player1]
        hash = s908098jhj3jhj
        first_time = True
        stats = 1,0,1

    saves.ini

        [player1,player2]
        X = player1
        turns = # TODO: дописать структуру хранения для ходов

    # имена игроков, статистика игроков, cохранённые

    # количество файлов?
    # пока- один #


4. Работа с данными в приложении

    # имена игроков, статистика игроков

        {'1':' имя игрока', ...}

        {'player1': {'hash':'s908098jhj3jhj:',
                     'first_time': True,
                     'stats': {'wins': 1, 'ties': 0, 'fails': 1}},

         'player2': {'hash':'s908423rjy3msj:',
                     'first_time': False,
                     'stats': {'wins': 3, 'ties': 2, 'fails': 1}},

        ...}

    # cохранённые незаконченные партии


    # ходы в текущей партии

        [ ['x', '0', 'x']
          ['0', 'x', '']
          [' ', 'x', ' '] ]
        (player1, player2)
        ('X', '0')



========================== Основные функции ==========================

